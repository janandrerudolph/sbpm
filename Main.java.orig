import java.io.File;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

<<<<<<< HEAD
import javax.swing.JFrame;

import gui.Frame;
import init.Triple;
import init.Interpreter;
import init.Subject;
import very.Veryfier;
=======
import init.Interpreter;
>>>>>>> jan


/**
 * @author jan/fabian
 * 
 * Main-Class, 
 * Prototype, to "visualize" the interpreted Data
 * 
 */
@SuppressWarnings("unused")
public class Main 
{
	
	/**
	 * @param args not used
	 */
	public static void main(String[] args) 
	{
		
		Frame frame = new Frame();
		
		frame.setTitle("Verifikation von S-BPM Prozessspezifikation mit abstrakten Schichten");
		frame.setSize(500,500);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		try 
		{
			copyPropertyFileForJena();
		}
		catch (Exception e)
		{
			System.err.println("Could not copy log4j.properties into bin/ >>" + e.getMessage() + "<<");
		}
		
		//print current time --> when did I test
		
		DateFormat dateFormat = new SimpleDateFormat("dd.MM.yy HH:mm:ss");
		Calendar cal = Calendar.getInstance();
		System.out.println("");
		System.out.println("");
		System.out.println(dateFormat.format(cal.getTime()));

		
		String link1 = "data/BasicPASSOntology.owl";
		String link2 = "data/abstract-layered-pass-ont.owl";
		String link3 = "data/AL-Customer-only.owl";
		String link4 = "data/AL-CustomerKingCombined.owl";
		Interpreter interpreter = new Interpreter(link4);
		Veryfier veryfier = new Veryfier(); //TODO actors Ã¼bergeben
		
		try 
		{
			interpreter.calculate();
			//veryfier.verifyImplementation(interpreter.getActors()); //to be corrected in Interpreter
			//TODO obige Zeile bei Jan wieder einkommentieren
		} 
		catch (Exception e) 
		{
			System.err.println("Could not calculate >>" + e.getMessage() + "<<");
			return;
		}
		

	
	
/////////////////////////////
//Initialising our data model
/////////////////////////////
	
	//DataModel dm = new DataModel(); //empty model
	
	//conduct the methods
		
	

	}
	
	/**This function copies the jena-file from the workspace into the bin/ folder (, where eclipse always deletes it...)
	 * @throws IOException
	 */
	@SuppressWarnings("resource")
	public static void copyPropertyFileForJena() throws IOException 
	{
		File in = new File("log4j.properties");
        File out = new File("bin/log4j.properties");
        FileChannel inChannel = null;
        FileChannel outChannel = null;
        try 
        {
            inChannel = new FileInputStream(in).getChannel();
            outChannel = new FileOutputStream(out).getChannel();
            inChannel.transferTo(0, inChannel.size(), outChannel);
        } 
        catch (IOException e) 
        {
            throw e;
        } 
        finally 
        {
            try 
            {
                if (inChannel != null)
                    inChannel.close();
                if (outChannel != null)
                    outChannel.close();
            } 
            catch (IOException e) 
            {}
        }
    }
}
